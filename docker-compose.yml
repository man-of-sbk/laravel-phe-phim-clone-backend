version: '2'

services:
  # application:
  #   image: debian
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: laravel
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
  mysql:
    restart: always
    image: mysql:5.7
    restart: unless-stopped
    volumes:
      - ./.docker/mysql:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: movie_app
      MYSQL_ROOT_PASSWORD: 123456
    networks:
      - app-network
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network
  adminer:
    image: adminer:latest
    restart: always
    tty: true
    ports:
      - 8000:8080
    networks:
      - app-network
  # node:
  #   image: nodejs
  #   container_name: node
  #   restart: unless-stopped
  #   env_file: .env
  #   ports:
  #     - "3030:8080"
  #   volumes:
  #     - ./node_server:/home/node_server
  #     - ./node_server/node_modules:/home/node_server
  #   networks:
  #     - app-network
  #   # working_dir: /home/node_server
  #   command: /home/node_server/node_modules/.bin/nodemon server.js
networks:
  app-network:
    driver: bridge
